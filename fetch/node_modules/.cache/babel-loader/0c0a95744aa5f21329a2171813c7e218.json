{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carmo\\\\learn-react\\\\47716\\\\fetch\\\\src\\\\Components\\\\SelectChips.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst activities = [\"Coffee\", \"Beers\", \"Workout\", \"Attraction\", \"Eating\", \"Market\", \"Anything\"];\n\nfunction getStyles(activities, personactivities, theme) {\n  return {\n    fontWeight: personactivities.indexOf(activities) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function SelectChips() {\n  _s();\n\n  const theme = useTheme();\n  const [personactivities, setPersonactivities] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonactivities( // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: 275\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-multiple-chip-label\",\n          children: \"Choose ativities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-multiple-chip-label\",\n          id: \"demo-multiple-chip\",\n          multiple: true,\n          value: personactivities,\n          onChange: handleChange,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"select-multiple-chip\",\n            label: \"Chip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }, this),\n          renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              gap: 0.5\n            },\n            children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n              label: value,\n              color: \"secondary\"\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this),\n          MenuProps: MenuProps,\n          children: activities.map(activities => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: activities,\n            style: getStyles(activities, personactivities, theme),\n            children: activities\n          }, activities, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectChips, \"vJxAPHsDsxlmaAQ46SQ9O0RmwFg=\", false, function () {\n  return [useTheme];\n});\n\n_c = SelectChips;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectChips\");","map":{"version":3,"names":["React","useTheme","Box","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","activities","getStyles","personactivities","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","SelectChips","setPersonactivities","useState","handleChange","event","target","value","split","m","selected","display","flexWrap","gap","map"],"sources":["C:/Users/carmo/learn-react/47716/fetch/src/Components/SelectChips.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst activities = [\r\n  \"Coffee\",\r\n  \"Beers\",\r\n  \"Workout\",\r\n  \"Attraction\",\r\n  \"Eating\",\r\n  \"Market\",\r\n  \"Anything\",\r\n];\r\n\r\nfunction getStyles(activities, personactivities, theme) {\r\n  return {\r\n    fontWeight:\r\n      personactivities.indexOf(activities) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function SelectChips() {\r\n  const theme = useTheme();\r\n  const [personactivities, setPersonactivities] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonactivities(\r\n      // On autofill we get a stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <FormControl sx={{ m: 1, width: 275 }}>\r\n          <InputLabel id=\"demo-multiple-chip-label\">\r\n            Choose ativities\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-multiple-chip-label\"\r\n            id=\"demo-multiple-chip\"\r\n            multiple\r\n            value={personactivities}\r\n            onChange={handleChange}\r\n            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n            renderValue={(selected) => (\r\n              <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n                {selected.map((value) => (\r\n                  <Chip key={value} label={value} color=\"secondary\" />\r\n                ))}\r\n              </Box>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {activities.map((activities) => (\r\n              <MenuItem\r\n                key={activities}\r\n                value={activities}\r\n                style={getStyles(activities, personactivities, theme)}\r\n              >\r\n                {activities}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}