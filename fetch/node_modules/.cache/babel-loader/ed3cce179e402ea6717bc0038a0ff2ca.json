{"ast":null,"code":"var _jsxFileName = \"C:\\\\VSCode\\\\Repo\\\\47716\\\\fetch\\\\src\\\\Pages\\\\Browse.jsx\",\n    _s = $RefreshSig$();\n\nimport { List } from \"@mui/material\";\nimport UserCards from \"../Components/UserCards\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Browse() {\n  _s();\n\n  const [CardsData, setCardsData] = useState([]); //this method will load actual data with fetch in the future\n\n  useEffect(() => {\n    getCardsData();\n  }, []);\n\n  const getCardsData = async () => {\n    console.log(\"Getting Cards data\");\n    const response = await fetch(`./FakeData/UsersData.json`);\n    console.log(`response succeeded`);\n    const data = await response.text();\n    console.log(`data as text: ${data}`);\n    console.log(`data as json: ${data.json()}`);\n    setCardsData(data.Users);\n    console.log(`Cards data: ${data.Users}`);\n  };\n\n  console.log(CardsData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        // TODO responsive\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        \"& > :not(style)\": {}\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        style: {\n          minHeight: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              align: \"center\",\n              width: \"100%\",\n              bgcolor: \"background.paper\",\n              align: \"center\"\n            },\n            children: CardsData.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(UserCards, {\n                Name: card.UserName,\n                Age: card.Age,\n                LastSeen: card.LastSeen,\n                ProfilePicture: card.ProfilePicture,\n                Activities: card.Activities,\n                UserId: card.UserId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, card.UserId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Browse, \"Dsc2lkPcwtLKXiHfyuVvuhtmTdM=\");\n\n_c = Browse;\nexport default Browse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Browse\");","map":{"version":3,"names":["List","UserCards","React","useEffect","useState","Box","Grid","Browse","CardsData","setCardsData","getCardsData","console","log","response","fetch","data","text","json","Users","display","flexWrap","minHeight","align","width","bgcolor","map","card","UserName","Age","LastSeen","ProfilePicture","Activities","UserId"],"sources":["C:/VSCode/Repo/47716/fetch/src/Pages/Browse.jsx"],"sourcesContent":["import { List } from \"@mui/material\";\r\nimport UserCards from \"../Components/UserCards\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nfunction Browse() {\r\n  const [CardsData, setCardsData] = useState([]); //this method will load actual data with fetch in the future\r\n  useEffect(() => {\r\n    getCardsData();\r\n  }, []);\r\n\r\n  const getCardsData = async () => {\r\n    console.log(\"Getting Cards data\");\r\n    const response = await fetch(`./FakeData/UsersData.json`);\r\n    console.log(`response succeeded`);\r\n    const data = await response.text();\r\n    console.log(`data as text: ${data}`);\r\n    console.log(`data as json: ${data.json()}`);\r\n    setCardsData(data.Users);\r\n    console.log(`Cards data: ${data.Users}`);\r\n  };\r\n  console.log(CardsData);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          // TODO responsive\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          \"& > :not(style)\": {},\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <List\r\n              sx={{\r\n                align: \"center\",\r\n                width: \"100%\",\r\n                bgcolor: \"background.paper\",\r\n                align: \"center\",\r\n              }}\r\n            >\r\n              {CardsData.map((card) => (\r\n                <div key={card.UserId}>\r\n                  <UserCards\r\n                    Name={card.UserName}\r\n                    Age={card.Age}\r\n                    LastSeen={card.LastSeen}\r\n                    ProfilePicture={card.ProfilePicture}\r\n                    Activities={card.Activities}\r\n                    UserId={card.UserId}\r\n                  />\r\n                  <br />\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Browse;\r\n"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,IAAT,QAAqB,eAArB;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CADgB,CACgC;;EAChDD,SAAS,CAAC,MAAM;IACdO,YAAY;EACb,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,YAAY,GAAG,YAAY;IAC/BC,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2BAAF,CAA5B;IACAH,OAAO,CAACC,GAAR,CAAa,oBAAb;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAL,OAAO,CAACC,GAAR,CAAa,iBAAgBG,IAAK,EAAlC;IACAJ,OAAO,CAACC,GAAR,CAAa,iBAAgBG,IAAI,CAACE,IAAL,EAAY,EAAzC;IACAR,YAAY,CAACM,IAAI,CAACG,KAAN,CAAZ;IACAP,OAAO,CAACC,GAAR,CAAa,eAAcG,IAAI,CAACG,KAAM,EAAtC;EACD,CATD;;EAUAP,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EAEA,oBACE;IAAA,uBACE,QAAC,GAAD;MACE,EAAE,EAAE;QACF;QACAW,OAAO,EAAE,MAFP;QAGFC,QAAQ,EAAE,MAHR;QAIF,mBAAmB;MAJjB,CADN;MAAA,uBAQE,QAAC,IAAD;QACE,SAAS,MADX;QAEE,OAAO,EAAE,CAFX;QAGE,SAAS,EAAC,QAHZ;QAIE,UAAU,EAAC,QAJb;QAKE,OAAO,EAAC,QALV;QAME,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAb,CANT;QAAA,uBAQE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,IAAD;YACE,EAAE,EAAE;cACFC,KAAK,EAAE,QADL;cAEFC,KAAK,EAAE,MAFL;cAGFC,OAAO,EAAE,kBAHP;cAIFF,KAAK,EAAE;YAJL,CADN;YAAA,UAQGd,SAAS,CAACiB,GAAV,CAAeC,IAAD,iBACb;cAAA,wBACE,QAAC,SAAD;gBACE,IAAI,EAAEA,IAAI,CAACC,QADb;gBAEE,GAAG,EAAED,IAAI,CAACE,GAFZ;gBAGE,QAAQ,EAAEF,IAAI,CAACG,QAHjB;gBAIE,cAAc,EAAEH,IAAI,CAACI,cAJvB;gBAKE,UAAU,EAAEJ,IAAI,CAACK,UALnB;gBAME,MAAM,EAAEL,IAAI,CAACM;cANf;gBAAA;gBAAA;gBAAA;cAAA,QADF,eASE;gBAAA;gBAAA;gBAAA;cAAA,QATF;YAAA,GAAUN,IAAI,CAACM,MAAf;cAAA;cAAA;cAAA;YAAA,QADD;UARH;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MARF;QAAA;QAAA;QAAA;MAAA;IARF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8CD;;GAhEQzB,M;;KAAAA,M;AAkET,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}