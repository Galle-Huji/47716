{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carmo\\\\learn-react\\\\47716\\\\fetch\\\\src\\\\Components\\\\DatePicker.jsx\",\n    _s = $RefreshSig$();\n\n// import * as React from \"react\";\n// import Stack from \"@mui/material/Stack\";\n// import TextField from \"@mui/material/TextField\";\n// import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\n// import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n// import { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\n// import { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\n// import { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\n// import { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\n// export default function DatePicker() {\n//   const [value, setValue] = React.useState(new Date(\"2014-08-18T21:11:54\"));\n//   const handleChange = (newValue) => {\n//     setValue(newValue);\n//   };\n//   return (\n//     <LocalizationProvider dateAdapter={AdapterDateFns}>\n//       <Stack spacing={3}>\n//         <DesktopDatePicker\n//           label=\"Date desktop\"\n//           inputFormat=\"MM/dd/yyyy\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//         <MobileDatePicker\n//           label=\"Date mobile\"\n//           inputFormat=\"MM/dd/yyyy\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//         <TimePicker\n//           label=\"Time\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//         <DateTimePicker\n//           label=\"Date&Time picker\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//       </Stack>\n//     </LocalizationProvider>\n//   );\n// }\n// import React, { useState } from \"react\";\n// import DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\n// export default function DatePicker() {\n//   const [value, onChange] = useState([new Date(), new Date()]);\n//   return (\n//     <div>\n//       <DateRangePicker onChange={onChange} value={value} />\n//     </div>\n//   );\n// }\nimport \"react-date-range/dist/styles.css\"; // main style file\n\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport { DateRangePicker } from \"react-date-range\";\nimport React, { Component } from \"react\";\nimport { useState } from \"react\"; // export default function DatePicker() {\n//   class MyComponent extends Component {\n//     handleSelect(ranges) {\n//       console.log(ranges);\n//       // {\n//       //   selection: {\n//       //     startDate: [native Date Object],\n//       //     endDate: [native Date Object],\n//       //   }\n//       // }\n//     }\n//     render() {\n//       const selectionRange = {\n//         startDate: new Date(),\n//         endDate: new Date(),\n//         key: \"selection\",\n//       };\n//       return (\n//         <DateRangePicker\n//           ranges={[selectionRange]}\n//           onChange={this.handleSelect}\n//         />\n//       );\n//     }\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DatePicker() {\n  _s();\n\n  const [state, setState] = useState([{\n    startDate: new Date(),\n    endDate: null,\n    key: \"selection\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(DateRange, {\n    editableDateInputs: true,\n    onChange: item => setState([item.selection]),\n    moveRangeOnFirstSelection: false,\n    ranges: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DatePicker, \"ByKLODHhJF9CQwr+/B1KcZt8xWM=\");\n\n_c = DatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePicker\");","map":{"version":3,"names":["DateRangePicker","React","Component","useState","DatePicker","state","setState","startDate","Date","endDate","key","item","selection"],"sources":["C:/Users/carmo/learn-react/47716/fetch/src/Components/DatePicker.jsx"],"sourcesContent":["// import * as React from \"react\";\r\n// import Stack from \"@mui/material/Stack\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n// import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\n// import { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\r\n// import { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\n// import { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\r\n// import { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\r\n\r\n// export default function DatePicker() {\r\n//   const [value, setValue] = React.useState(new Date(\"2014-08-18T21:11:54\"));\r\n\r\n//   const handleChange = (newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n//       <Stack spacing={3}>\r\n//         <DesktopDatePicker\r\n//           label=\"Date desktop\"\r\n//           inputFormat=\"MM/dd/yyyy\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//         <MobileDatePicker\r\n//           label=\"Date mobile\"\r\n//           inputFormat=\"MM/dd/yyyy\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//         <TimePicker\r\n//           label=\"Time\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//         <DateTimePicker\r\n//           label=\"Date&Time picker\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//       </Stack>\r\n//     </LocalizationProvider>\r\n//   );\r\n// }\r\n// import React, { useState } from \"react\";\r\n// import DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\n\r\n// export default function DatePicker() {\r\n//   const [value, onChange] = useState([new Date(), new Date()]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <DateRangePicker onChange={onChange} value={value} />\r\n//     </div>\r\n//   );\r\n// }\r\nimport \"react-date-range/dist/styles.css\"; // main style file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\n// export default function DatePicker() {\r\n//   class MyComponent extends Component {\r\n//     handleSelect(ranges) {\r\n//       console.log(ranges);\r\n//       // {\r\n//       //   selection: {\r\n//       //     startDate: [native Date Object],\r\n//       //     endDate: [native Date Object],\r\n//       //   }\r\n//       // }\r\n//     }\r\n//     render() {\r\n//       const selectionRange = {\r\n//         startDate: new Date(),\r\n//         endDate: new Date(),\r\n//         key: \"selection\",\r\n//       };\r\n//       return (\r\n//         <DateRangePicker\r\n//           ranges={[selectionRange]}\r\n//           onChange={this.handleSelect}\r\n//         />\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\nexport default function DatePicker() {\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: null,\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  return (\r\n    <DateRange\r\n      editableDateInputs={true}\r\n      onChange={(item) => setState([item.selection])}\r\n      moveRangeOnFirstSelection={false}\r\n      ranges={state}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,kCAAP,C,CAA2C;;AAC3C,OAAO,yCAAP,C,CAAkD;;AAClD,SAASA,eAAT,QAAgC,kBAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;IACEI,SAAS,EAAE,IAAIC,IAAJ,EADb;IAEEC,OAAO,EAAE,IAFX;IAGEC,GAAG,EAAE;EAHP,CADiC,CAAD,CAAlC;EAOA,oBACE,QAAC,SAAD;IACE,kBAAkB,EAAE,IADtB;IAEE,QAAQ,EAAGC,IAAD,IAAUL,QAAQ,CAAC,CAACK,IAAI,CAACC,SAAN,CAAD,CAF9B;IAGE,yBAAyB,EAAE,KAH7B;IAIE,MAAM,EAAEP;EAJV;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAhBuBD,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}