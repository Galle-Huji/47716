{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carmo\\\\learn-react\\\\47716\\\\fetch\\\\src\\\\Components\\\\DatePicker.jsx\",\n    _s = $RefreshSig$();\n\n// import * as React from \"react\";\n// import Stack from \"@mui/material/Stack\";\n// import TextField from \"@mui/material/TextField\";\n// import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\n// import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n// import { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\n// import { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\n// import { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\n// import { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\n// export default function DatePicker() {\n//   const [value, setValue] = React.useState(new Date(\"2014-08-18T21:11:54\"));\n//   const handleChange = (newValue) => {\n//     setValue(newValue);\n//   };\n//   return (\n//     <LocalizationProvider dateAdapter={AdapterDateFns}>\n//       <Stack spacing={3}>\n//         <DesktopDatePicker\n//           label=\"Date desktop\"\n//           inputFormat=\"MM/dd/yyyy\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//         <MobileDatePicker\n//           label=\"Date mobile\"\n//           inputFormat=\"MM/dd/yyyy\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//         <TimePicker\n//           label=\"Time\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//         <DateTimePicker\n//           label=\"Date&Time picker\"\n//           value={value}\n//           onChange={handleChange}\n//           renderInput={(params) => <TextField {...params} />}\n//         />\n//       </Stack>\n//     </LocalizationProvider>\n//   );\n// }\nimport * as React from \"react\";\nimport addWeeks from \"date-fns/addWeeks\";\nimport TextField from \"@mui/material/TextField\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getWeeksAfter(date, amount) {\n  return date ? addWeeks(date, amount) : undefined;\n}\n\nexport default function MinMaxDateRangePicker() {\n  _s();\n\n  const [value, setValue] = React.useState([null, null]);\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n      disablePast: true,\n      value: value,\n      maxDate: getWeeksAfter(value[0], 4),\n      onChange: newValue => {\n        setValue(newValue);\n      },\n      renderInput: (startProps, endProps) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, { ...startProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mx: 2\n          },\n          children: \" to \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...endProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MinMaxDateRangePicker, \"i++46Mrr+0bXayCimQCyrJ3lcao=\");\n\n_c = MinMaxDateRangePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinMaxDateRangePicker\");","map":{"version":3,"names":["React","addWeeks","TextField","AdapterDateFns","LocalizationProvider","DateRangePicker","Box","getWeeksAfter","date","amount","undefined","MinMaxDateRangePicker","value","setValue","useState","newValue","startProps","endProps","mx"],"sources":["C:/Users/carmo/learn-react/47716/fetch/src/Components/DatePicker.jsx"],"sourcesContent":["// import * as React from \"react\";\r\n// import Stack from \"@mui/material/Stack\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n// import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\n// import { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\r\n// import { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\n// import { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\r\n// import { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\r\n\r\n// export default function DatePicker() {\r\n//   const [value, setValue] = React.useState(new Date(\"2014-08-18T21:11:54\"));\r\n\r\n//   const handleChange = (newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n//       <Stack spacing={3}>\r\n//         <DesktopDatePicker\r\n//           label=\"Date desktop\"\r\n//           inputFormat=\"MM/dd/yyyy\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//         <MobileDatePicker\r\n//           label=\"Date mobile\"\r\n//           inputFormat=\"MM/dd/yyyy\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//         <TimePicker\r\n//           label=\"Time\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//         <DateTimePicker\r\n//           label=\"Date&Time picker\"\r\n//           value={value}\r\n//           onChange={handleChange}\r\n//           renderInput={(params) => <TextField {...params} />}\r\n//         />\r\n//       </Stack>\r\n//     </LocalizationProvider>\r\n//   );\r\n// }\r\nimport * as React from \"react\";\r\nimport addWeeks from \"date-fns/addWeeks\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nfunction getWeeksAfter(date, amount) {\r\n  return date ? addWeeks(date, amount) : undefined;\r\n}\r\n\r\nexport default function MinMaxDateRangePicker() {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DateRangePicker\r\n        disablePast\r\n        value={value}\r\n        maxDate={getWeeksAfter(value[0], 4)}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <TextField {...startProps} />\r\n            <Box sx={{ mx: 2 }}> to </Box>\r\n            <TextField {...endProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,eAAT,QAAgC,yCAAhC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;EACnC,OAAOD,IAAI,GAAGP,QAAQ,CAACO,IAAD,EAAOC,MAAP,CAAX,GAA4BC,SAAvC;AACD;;AAED,eAAe,SAASC,qBAAT,GAAiC;EAAA;;EAC9C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe,CAAC,IAAD,EAAO,IAAP,CAAf,CAA1B;EAEA,oBACE,QAAC,oBAAD;IAAsB,WAAW,EAAEX,cAAnC;IAAA,uBACE,QAAC,eAAD;MACE,WAAW,MADb;MAEE,KAAK,EAAES,KAFT;MAGE,OAAO,EAAEL,aAAa,CAACK,KAAK,CAAC,CAAD,CAAN,EAAW,CAAX,CAHxB;MAIE,QAAQ,EAAGG,QAAD,IAAc;QACtBF,QAAQ,CAACE,QAAD,CAAR;MACD,CANH;MAOE,WAAW,EAAE,CAACC,UAAD,EAAaC,QAAb,kBACX,QAAC,KAAD,CAAO,QAAP;QAAA,wBACE,QAAC,SAAD,OAAeD;QAAf;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,GAAD;UAAK,EAAE,EAAE;YAAEE,EAAE,EAAE;UAAN,CAAT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,SAAD,OAAeD;QAAf;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IARJ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAtBuBN,qB;;KAAAA,qB"},"metadata":{},"sourceType":"module"}